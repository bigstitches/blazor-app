@page "/garden"
@using Microsoft.JSInterop
@inject HttpClient Http

<h3>HTML Canvas in Blazor</h3>
<canvas id="myCanvas" width="500" height="400" style="border:1px solid #000000;" @onmousemove="DrawLine" @onmousedown="StartDrawing" @onmouseup="StopDrawing"></canvas>

<button @onclick="EraseOnCanvas">Erase</button>
<p>Mouse Location: @MouseX, @MouseY</p>

@code {
    [Inject] IJSRuntime JS { get; set; }
    private double MouseX { get; set; }
    private double MouseY { get; set; }
    private string penColor { get; set; }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Initialize JavaScript for the canvas
            await JS.InvokeVoidAsync("initializeCanvas");
        }
    }

    private async Task StartDrawing(MouseEventArgs e)
    {
        await JS.InvokeVoidAsync("startDrawing", e.OffsetX, e.OffsetY);
    }

    private async Task EraseOnCanvas()
    {
        await JS.InvokeVoidAsync("eraseOnCanvas");
    }

    private async Task StopDrawing()
    {
        await JS.InvokeVoidAsync("stopDrawing");
    }

    private void SetPen(string color)
    {
        penColor = color;
    }

    private async Task DrawLine(MouseEventArgs e)
    {
        MouseX = e.OffsetX;
        MouseY = e.OffsetY;

        await JS.InvokeVoidAsync("drawContinuousLine", "black", e.OffsetX, e.OffsetY);

        StateHasChanged();
    }
}
